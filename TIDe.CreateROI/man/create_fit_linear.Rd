% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_fit_linear.R
\name{create_fit_linear}
\alias{create_fit_linear}
\title{create_fit_linear}
\usage{
create_fit_linear(meancpa, mfpga_bin, margin, meas_no, alpha_packet_size)
}
\arguments{
\item{meancpa}{Sum of the rows from \code{mfpga_bin} and divided by alpha packet size.}

\item{mfpga_bin}{Matrix with each row corresponding to one alpha, each column to an ionization}

\item{margin}{Margin for the calculation of fit, default is 0.01 (one percent).}

\item{meas_no}{Measurement number.}

\item{alpha_packet_size}{Number of alpha particles grouped into one data point, default 100.}
}
\value{
List with entries \code{alph_start}, \code{alph_end}, \code{curve_fit_param_A},
\code{curve_fit_param_B},\code{curve_fit_param_C} and \code{CpT_plot}
}
\description{
This function creates a linear fit for measurement data and then
selects a stable region within a margin.
}
\details{
The whole measurement region is taken as ROI. There is code that could be commented in to take
the margin into account. The function is fitted with stats::lm and is given by:
\eqn{
f(x) = A + Bx
}
}
\examples{
\dontrun{
result_fit2 <- create_fit_linear(meancpa = roi_values$meas$meancpa,
                                         mfpga_bin = roi_values$meas$mfpga_bin,
                                         margin = input$roi_margin,
                                         meas_no =  input$roi_meas_no,
                                         alpha_packet_size = input$roi_alpha_packet_size)
roi_values$alph_start <- result_fit2$alph_start
roi_values$alph_end <- result_fit2$alph_end

roi_values$curve_fit_param_A <- result_fit2$curve_fit_param_A
roi_values$curve_fit_param_B <- result_fit2$curve_fit_param_B
roi_values$curve_fit_param_C <- result_fit2$curve_fit_param_C
roi_values$curve_shape <- 1

output$roi_plot_CpT <- result_fit2$CpT_plot
}
}
